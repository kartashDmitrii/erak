(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=2)})([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return popupFunc});class popupFunc{constructor(button,popup){this.button=button;this.popup=popup;this.openPopupFunc=this.openPopup.bind(this);this.closePopupFunc=this.closePopup.bind(this);if(Array.isArray(this.button)){this.button.forEach(elem=>{elem.addEventListener("click",this.openPopupFunc)})}else{this.button.addEventListener("click",this.openPopupFunc)}this.popup.querySelectorAll(".close").forEach(elem=>elem.addEventListener("click",this.closePopupFunc));if(this.popup.parentNode.classList.contains("wrapper")){this.popup.parentNode.addEventListener("click",this.closePopupFunc)}}openPopup(event){event.preventDefault();this.popup.classList.add("active");if(this.popup.parentNode.classList.contains("wrapper")){this.popup.parentNode.classList.add("active")}if(window.screen.width<768){document.body.classList.add("hidden")}}closePopup(event){if(!event.target.classList.contains("close")&&event.target.closest(`.${this.button.dataset.popup}`)!==null){event.stopPropagation()}else{this.popup.classList.remove("active");if(this.popup.parentNode.classList.contains("wrapper")){this.popup.parentNode.classList.remove("active")}if(window.screen.width<768){document.body.classList.remove("hidden")}}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"default",function(){return hideList});class hideList{constructor(listBlock){this.listBlock=listBlock;this.list=this.listBlock.querySelector("[data-block]");this.listBlock.querySelector("[data-btn]").addEventListener("click",()=>{this.showBlock()});if(this.list.classList.contains("active")){this.list.style.height=`${this.list.scrollHeight}px`}}showBlock(){let blockHeight=parseInt(window.getComputedStyle(this.list).getPropertyValue("height"));if(blockHeight===0){this.list.style.height=`${this.list.scrollHeight}px`;this.listBlock.querySelector("[data-btn]").classList.add("active")}else{this.listBlock.querySelector("[data-btn]").classList.remove("active");this.list.style.height=`0`}}}},function(module,exports,__webpack_require__){__webpack_require__(3);__webpack_require__(1);module.exports=__webpack_require__(0)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _components_popupFunc__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);var _components_hideList__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1);if(document.querySelector("section.rent .slider")){let slider=document.querySelector("section.rent .slider");let siema=new Siema({selector:slider.querySelector(".wrapper"),duration:400,easing:"ease-out",perPage:{0:2,768:3,1200:4},startIndex:0,draggable:true,multipleDrag:true,threshold:20,loop:false,rtl:false,onInit:function(){let dotCount=Math.ceil(this.selector.querySelectorAll(".slide").length/this.perPage);for(let i=0;i<dotCount;i++){let dot=document.createElement("button");dot.classList.add("dot");slider.querySelector(".dots").appendChild(dot);dot.addEventListener("click",()=>{siema.goTo(i*siema.perPage)})}slider.querySelector(".dots").querySelectorAll(".dot")[Math.ceil(this.currentSlide/this.perPage)].classList.add("active");slider.querySelector(".btns .prev").addEventListener("click",()=>{siema.prev(this.perPage)});slider.querySelector(".btns .next").addEventListener("click",()=>{siema.next(this.perPage)})},onChange:function(){if(slider.querySelector(".dots").querySelector(".dot.active")){slider.querySelector(".dots").querySelector(".dot.active").classList.remove("active")}slider.querySelector(".dots").querySelectorAll(".dot")[Math.ceil(siema.currentSlide/siema.perPage)].classList.add("active")}})}document.querySelectorAll("[data-popup]").forEach(elem=>{new _components_popupFunc__WEBPACK_IMPORTED_MODULE_0__["default"](elem,document.querySelector(`.${elem.dataset.popup}`))});document.querySelectorAll("header nav>ul li.has-child").forEach(elem=>{elem.addEventListener("click",function(event){event.stopPropagation();if(event.target.classList.contains("has-child")||event.target.parentNode.classList.contains("has-child")){elem.classList.toggle("active")}})});if(document.querySelector(".custom-select")){document.querySelectorAll(".custom-select").forEach(customSelectField=>{let originalSelectOptions=customSelectField.querySelectorAll("select option"),customSelect=document.createElement("div");customSelectField.querySelector("select").style.display="none";customSelect.classList.add("select");if(customSelectField.dataset.theme){customSelect.classList.add(customSelectField.dataset.theme)}customSelectField.querySelector("select").addEventListener("change",function(event){console.log(event.target.value)});let hideOptions=function(event){if(!event.target.closest(".custom-select")){customSelect.classList.remove("active");customOptions.classList.remove("active");document.removeEventListener("click",hideOptions)}};let customSelected=document.createElement("p");customSelected.classList.add("selected");customSelect.appendChild(customSelected);customSelected.addEventListener("click",()=>{if(customOptions.classList.contains("active")){customSelect.classList.remove("active");document.removeEventListener("click",hideOptions);customOptions.classList.remove("active")}else{customSelect.classList.add("active");customOptions.classList.add("active");setTimeout(()=>{document.addEventListener("click",hideOptions)})}});let customOptions=document.createElement("div");customOptions.classList.add("options");customSelect.appendChild(customOptions);originalSelectOptions.forEach((elem,index)=>{let customOption=document.createElement("p");customOption.classList.add("option");customOption.innerText=elem.innerText;customOptions.appendChild(customOption);if(elem.selected){customSelected.innerText=elem.innerText}customOption.addEventListener("click",event=>{customSelectField.querySelector("select").value=elem.value;customSelectField.querySelector("select").dispatchEvent(new Event("change"));elem.selected=true;customSelected.innerText=customOption.innerText;customSelect.classList.remove("active");customOptions.classList.remove("active")})});customSelectField.prepend(customSelect)})}if(document.querySelector(".aside .field")){document.querySelectorAll(".aside .field").forEach(elem=>{new _components_hideList__WEBPACK_IMPORTED_MODULE_1__["default"](elem)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibW9kdWxlcyIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJnZXREZWZhdWx0IiwiZ2V0TW9kdWxlRXhwb3J0cyIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIl9fd2VicGFja19leHBvcnRzX18iLCJwb3B1cEZ1bmMiLCJbb2JqZWN0IE9iamVjdF0iLCJidXR0b24iLCJwb3B1cCIsInRoaXMiLCJvcGVuUG9wdXBGdW5jIiwib3BlblBvcHVwIiwiY2xvc2VQb3B1cEZ1bmMiLCJjbG9zZVBvcHVwIiwiQXJyYXkiLCJpc0FycmF5IiwiZm9yRWFjaCIsImVsZW0iLCJhZGRFdmVudExpc3RlbmVyIiwicXVlcnlTZWxlY3RvckFsbCIsInBhcmVudE5vZGUiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJhZGQiLCJ3aW5kb3ciLCJzY3JlZW4iLCJ3aWR0aCIsImRvY3VtZW50IiwiYm9keSIsInRhcmdldCIsImNsb3Nlc3QiLCJkYXRhc2V0Iiwic3RvcFByb3BhZ2F0aW9uIiwicmVtb3ZlIiwiaGlkZUxpc3QiLCJsaXN0QmxvY2siLCJsaXN0IiwicXVlcnlTZWxlY3RvciIsInNob3dCbG9jayIsInN0eWxlIiwiaGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwiYmxvY2tIZWlnaHQiLCJwYXJzZUludCIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiX2NvbXBvbmVudHNfcG9wdXBGdW5jX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfY29tcG9uZW50c19oaWRlTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwic2xpZGVyIiwic2llbWEiLCJTaWVtYSIsInNlbGVjdG9yIiwiZHVyYXRpb24iLCJlYXNpbmciLCJwZXJQYWdlIiwiMCIsIjc2OCIsIjEyMDAiLCJzdGFydEluZGV4IiwiZHJhZ2dhYmxlIiwibXVsdGlwbGVEcmFnIiwidGhyZXNob2xkIiwibG9vcCIsInJ0bCIsIm9uSW5pdCIsImRvdENvdW50IiwiTWF0aCIsImNlaWwiLCJsZW5ndGgiLCJkb3QiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJnb1RvIiwiY3VycmVudFNsaWRlIiwicHJldiIsIm5leHQiLCJvbkNoYW5nZSIsInRvZ2dsZSIsImN1c3RvbVNlbGVjdEZpZWxkIiwib3JpZ2luYWxTZWxlY3RPcHRpb25zIiwiY3VzdG9tU2VsZWN0IiwiZGlzcGxheSIsInRoZW1lIiwiY29uc29sZSIsImxvZyIsImhpZGVPcHRpb25zIiwiY3VzdG9tT3B0aW9ucyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjdXN0b21TZWxlY3RlZCIsInNldFRpbWVvdXQiLCJpbmRleCIsImN1c3RvbU9wdGlvbiIsImlubmVyVGV4dCIsInNlbGVjdGVkIiwiZGlzcGF0Y2hFdmVudCIsIkV2ZW50IiwicHJlcGVuZCJdLCJtYXBwaW5ncyI6IkNBQVMsU0FBVUEsU0FFVCxJQUFJQyxpQkFBbUIsR0FHdkIsU0FBU0Msb0JBQW9CQyxVQUc1QixHQUFHRixpQkFBaUJFLFVBQVcsQ0FDOUIsT0FBT0YsaUJBQWlCRSxVQUFVQyxRQUduQyxJQUFJQyxPQUFTSixpQkFBaUJFLFVBQVksQ0FDekNHLEVBQUdILFNBQ0hJLEVBQUcsTUFDSEgsUUFBUyxJQUlWSixRQUFRRyxVQUFVSyxLQUFLSCxPQUFPRCxRQUFTQyxPQUFRQSxPQUFPRCxRQUFTRixx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TyxjQUl2QzZDLGtCQUFrQmtCLFFBQVFoQixnQkFNbEMsR0FBSXJELFNBQVNVLGNBQWMsaUJBQWlCLENBQ3hDVixTQUFTVixpQkFBaUIsaUJBQWlCSCxRQUFTQyxPQUNoRCxJQUFJZ0Msa0RBQWtELFdBQVdoQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4vKioqKioqLyBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4vKioqKioqLyBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuLyoqKioqKi8gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbi8qKioqKiovIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuLyoqKioqKi8gXHRcdHJldHVybiBucztcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMik7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImRlZmF1bHRcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBwb3B1cEZ1bmM7IH0pO1xuY2xhc3MgcG9wdXBGdW5jIHtcclxuICAgIGNvbnN0cnVjdG9yKGJ1dHRvbixwb3B1cCkge1xyXG4gICAgICAgIHRoaXMuYnV0dG9uID0gYnV0dG9uO1xyXG4gICAgICAgIHRoaXMucG9wdXAgPSBwb3B1cDtcclxuICAgICAgICB0aGlzLm9wZW5Qb3B1cEZ1bmMgPSB0aGlzLm9wZW5Qb3B1cC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuY2xvc2VQb3B1cEZ1bmMgPSB0aGlzLmNsb3NlUG9wdXAuYmluZCh0aGlzKTtcclxuICAgICAgICBpZiAoIEFycmF5LmlzQXJyYXkodGhpcy5idXR0b24pKXtcclxuICAgICAgICAgICAgdGhpcy5idXR0b24uZm9yRWFjaCggZWxlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vcGVuUG9wdXBGdW5jKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub3BlblBvcHVwRnVuYyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucG9wdXAucXVlcnlTZWxlY3RvckFsbCgnLmNsb3NlJykuZm9yRWFjaCggZWxlbSA9PiBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbG9zZVBvcHVwRnVuYykpO1xyXG4gICAgICAgIGlmICh0aGlzLnBvcHVwLnBhcmVudE5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCd3cmFwcGVyJykpIHtcclxuICAgICAgICAgICAgdGhpcy5wb3B1cC5wYXJlbnROb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbG9zZVBvcHVwRnVuYyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb3BlblBvcHVwKGV2ZW50KXtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHRoaXMucG9wdXAuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgaWYgKHRoaXMucG9wdXAucGFyZW50Tm9kZS5jbGFzc0xpc3QuY29udGFpbnMoJ3dyYXBwZXInKSkge1xyXG4gICAgICAgICAgICB0aGlzLnBvcHVwLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh3aW5kb3cuc2NyZWVuLndpZHRoIDwgNzY4KSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjbG9zZVBvcHVwKGV2ZW50KXtcclxuICAgICAgICBpZiAoIWV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2Nsb3NlJykgJiYgZXZlbnQudGFyZ2V0LmNsb3Nlc3QoYC4ke3RoaXMuYnV0dG9uLmRhdGFzZXQucG9wdXB9YCkgIT09IG51bGwpe1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnBvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wb3B1cC5wYXJlbnROb2RlLmNsYXNzTGlzdC5jb250YWlucygnd3JhcHBlcicpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwLnBhcmVudE5vZGUuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHdpbmRvdy5zY3JlZW4ud2lkdGggPCA3NjgpIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxuXG4vKioqLyB9KSxcbi8qIDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiZGVmYXVsdFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGhpZGVMaXN0OyB9KTtcbmNsYXNzIGhpZGVMaXN0e1xyXG4gICAgY29uc3RydWN0b3IobGlzdEJsb2NrKSB7XHJcbiAgICAgICAgdGhpcy5saXN0QmxvY2sgPSBsaXN0QmxvY2s7XHJcbiAgICAgICAgdGhpcy5saXN0ID0gdGhpcy5saXN0QmxvY2sucXVlcnlTZWxlY3RvcignW2RhdGEtYmxvY2tdJyk7XHJcbiAgICAgICAgdGhpcy5saXN0QmxvY2sucXVlcnlTZWxlY3RvcignW2RhdGEtYnRuXScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9Pnt0aGlzLnNob3dCbG9jaygpfSk7XHJcbiAgICAgICAgaWYgKHRoaXMubGlzdC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdC5zdHlsZS5oZWlnaHQgPSBgJHt0aGlzLmxpc3Quc2Nyb2xsSGVpZ2h0fXB4YDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBzaG93QmxvY2soKXtcclxuICAgICAgICBsZXQgYmxvY2tIZWlnaHQgPSBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmxpc3QpLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpKTtcclxuICAgICAgICBpZiAoYmxvY2tIZWlnaHQgPT09IDApe1xyXG4gICAgICAgICAgICB0aGlzLmxpc3Quc3R5bGUuaGVpZ2h0ID0gYCR7dGhpcy5saXN0LnNjcm9sbEhlaWdodH1weGA7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdEJsb2NrLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWJ0bl0nKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmxpc3RCbG9jay5xdWVyeVNlbGVjdG9yKCdbZGF0YS1idG5dJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdC5zdHlsZS5oZWlnaHQgPSBgMGBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cblxuLyoqKi8gfSksXG4vKiAyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbl9fd2VicGFja19yZXF1aXJlX18oMyk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cbi8qKiovIH0pLFxuLyogMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29tcG9uZW50c19wb3B1cEZ1bmNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbXBvbmVudHNfaGlkZUxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5cclxuXHJcblxyXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2VjdGlvbi5yZW50IC5zbGlkZXInKSl7XHJcbiAgICBsZXQgc2xpZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2VjdGlvbi5yZW50IC5zbGlkZXInKTtcclxuICAgIGxldCBzaWVtYSA9IG5ldyBTaWVtYSh7XHJcbiAgICAgICAgc2VsZWN0b3I6IHNsaWRlci5xdWVyeVNlbGVjdG9yKCcud3JhcHBlcicpLFxyXG4gICAgICAgIGR1cmF0aW9uOiA0MDAsXHJcbiAgICAgICAgZWFzaW5nOiAnZWFzZS1vdXQnLFxyXG4gICAgICAgIHBlclBhZ2U6IHtcclxuICAgICAgICAgICAgMDogMixcclxuICAgICAgICAgICAgNzY4OiAzLFxyXG4gICAgICAgICAgICAxMjAwOiA0XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzdGFydEluZGV4OiAwLFxyXG4gICAgICAgIGRyYWdnYWJsZTogdHJ1ZSxcclxuICAgICAgICBtdWx0aXBsZURyYWc6IHRydWUsXHJcbiAgICAgICAgdGhyZXNob2xkOiAyMCxcclxuICAgICAgICBsb29wOiBmYWxzZSxcclxuICAgICAgICBydGw6IGZhbHNlLFxyXG4gICAgICAgIG9uSW5pdDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgbGV0IGRvdENvdW50ID0gTWF0aC5jZWlsKHRoaXMuc2VsZWN0b3IucXVlcnlTZWxlY3RvckFsbCgnLnNsaWRlJykubGVuZ3RoIC8gdGhpcy5wZXJQYWdlKTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkb3RDb3VudDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGxldCBkb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICAgICAgICAgIGRvdC5jbGFzc0xpc3QuYWRkKCdkb3QnKTtcclxuICAgICAgICAgICAgICAgIHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuZG90cycpLmFwcGVuZENoaWxkKGRvdCk7XHJcbiAgICAgICAgICAgICAgICBkb3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e3NpZW1hLmdvVG8oaSAqIHNpZW1hLnBlclBhZ2UpfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoJy5kb3RzJykucXVlcnlTZWxlY3RvckFsbCgnLmRvdCcpW01hdGguY2VpbCh0aGlzLmN1cnJlbnRTbGlkZSAvIHRoaXMucGVyUGFnZSldLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBzbGlkZXIucXVlcnlTZWxlY3RvcignLmJ0bnMgLnByZXYnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57c2llbWEucHJldih0aGlzLnBlclBhZ2UpfSk7XHJcbiAgICAgICAgICAgIHNsaWRlci5xdWVyeVNlbGVjdG9yKCcuYnRucyAubmV4dCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntzaWVtYS5uZXh0KHRoaXMucGVyUGFnZSl9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBpZiAoc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoJy5kb3RzJykucXVlcnlTZWxlY3RvcignLmRvdC5hY3RpdmUnKSl7XHJcbiAgICAgICAgICAgICAgICBzbGlkZXIucXVlcnlTZWxlY3RvcignLmRvdHMnKS5xdWVyeVNlbGVjdG9yKCcuZG90LmFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoJy5kb3RzJykucXVlcnlTZWxlY3RvckFsbCgnLmRvdCcpW01hdGguY2VpbChzaWVtYS5jdXJyZW50U2xpZGUgLyBzaWVtYS5wZXJQYWdlKV0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcclxuICAgICAgICB9LFxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXBvcHVwXScpLmZvckVhY2goIGVsZW0gPT4ge1xyXG4gICAgbmV3IF9jb21wb25lbnRzX3BvcHVwRnVuY19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fW1wiZGVmYXVsdFwiXShlbGVtLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtlbGVtLmRhdGFzZXQucG9wdXB9YCkpO1xyXG59KTtcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2hlYWRlciBuYXY+dWwgbGkuaGFzLWNoaWxkJykuZm9yRWFjaCggZWxlbSA9PiB7XHJcbiAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKClcclxuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnaGFzLWNoaWxkJykgfHwgZXZlbnQudGFyZ2V0LnBhcmVudE5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdoYXMtY2hpbGQnKSkge1xyXG4gICAgICAgICAgICBlbGVtLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8qICB0b3ZhciBjdXN0b20gc2VsZWN0ICAgICovXHJcblxyXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN1c3RvbS1zZWxlY3QnKSl7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY3VzdG9tLXNlbGVjdCcpLmZvckVhY2goIGN1c3RvbVNlbGVjdEZpZWxkPT57ICAgICAgIC8vINCS0YvQsdC40YDQsNC10Lwg0LLRgdC1INGB0LXQu9C10LrRgtGLINC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG4gICAgICAgIGxldCBvcmlnaW5hbFNlbGVjdE9wdGlvbnMgPSBjdXN0b21TZWxlY3RGaWVsZC5xdWVyeVNlbGVjdG9yQWxsKCdzZWxlY3Qgb3B0aW9uJyksICAgIC8vINCe0L/RiNC10L3RiyDQstC90YPRgtGA0Lgg0YLQtdC60YPRidC10LPQviDRgdC10LvQtdC60YLQsFxyXG4gICAgICAgICAgICBjdXN0b21TZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAg0KHQvtC30LTQsNGR0Lwg0L3QvtCy0YvQuSDRgdC10LvQtdC60YJcclxuICAgICAgICBjdXN0b21TZWxlY3RGaWVsZC5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOyAgICAgICAgICAgICAgICAgICAgLy8gINCh0LrRgNGL0LLQsNC10Lwg0YHRgtCw0YDRi9C5XHJcbiAgICAgICAgY3VzdG9tU2VsZWN0LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdCcpO1xyXG4gICAgICAgIGlmIChjdXN0b21TZWxlY3RGaWVsZC5kYXRhc2V0LnRoZW1lKSB7XHJcbiAgICAgICAgICAgIGN1c3RvbVNlbGVjdC5jbGFzc0xpc3QuYWRkKGN1c3RvbVNlbGVjdEZpZWxkLmRhdGFzZXQudGhlbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjdXN0b21TZWxlY3RGaWVsZC5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbiAoZXZlbnQpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQudmFsdWUpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbGV0IGhpZGVPcHRpb25zID0gZnVuY3Rpb24gKGV2ZW50KXsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDQpNGD0L3QutGG0LjRjyDQtNC70Y8g0YHQutGA0YvRgtC40Y8g0YHQtdC70LXQutGC0LAg0L/RgNC4INC90LDQttCw0YLQuNC4INC80LjQvNC+INGG0LXQu9C4XHJcbiAgICAgICAgICAgIGlmICghZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5jdXN0b20tc2VsZWN0JykpIHtcclxuICAgICAgICAgICAgICAgIGN1c3RvbVNlbGVjdC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIGN1c3RvbU9wdGlvbnMuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhpZGVPcHRpb25zKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBsZXQgY3VzdG9tU2VsZWN0ZWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAg0KHQvtC30LTQsNGR0Lwg0KAg0LrQvtGC0L7RgNGL0Lkg0LHRg9C00LXRgiDQv9C+0LrQsNC30YvQstCw0YLRjCDRgtC10LrRg9GJ0LjQuSDQstGL0LHRgNCw0L3QvdGL0Lkg0Y3Qu9C10LzQtdC90YJcclxuICAgICAgICBjdXN0b21TZWxlY3RlZC5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgIGN1c3RvbVNlbGVjdC5hcHBlbmRDaGlsZChjdXN0b21TZWxlY3RlZCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vINCU0L7QsdCw0LLQu9GP0LXQvCDQtdCz0L4g0LIg0LrQsNGB0YLQvtC80L3Ri9C5INGB0LXQu9C10LrRglxyXG4gICAgICAgIGN1c3RvbVNlbGVjdGVkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PnsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g0KTRg9C90LrRhtC40Y8g0LTQu9GPINGA0LDRgdGB0LrRgNGL0YLQuNGPINGB0LXQu9C10LrRgtCwLCDQv9C10YDQtdCy0L7RgNC+0YLQsCDRgdGC0YDQtdC70LrQuCDQuCDQvdCw0LbQsNGC0LjQuFxyXG4gICAgICAgICAgICBpZiAoY3VzdG9tT3B0aW9ucy5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKXsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g0LzQuNC80L4g0YHQtdC70LXQutGC0LBcclxuICAgICAgICAgICAgICAgIGN1c3RvbVNlbGVjdC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGlkZU9wdGlvbnMpO1xyXG4gICAgICAgICAgICAgICAgY3VzdG9tT3B0aW9ucy5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY3VzdG9tU2VsZWN0LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgY3VzdG9tT3B0aW9ucy5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCk9PntcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhpZGVPcHRpb25zKVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IGN1c3RvbU9wdGlvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g0KHQvtC30LTQsNGR0Lwg0YHQv9C40YHQvtC6INCe0L/RiNC10L3QvtCyINC4INC00L7QsdCw0LLQu9C10L3QuNC1INC10LPQviDQsiDQutCw0YHRgtC+0LzQvdGL0Lkg0YHQv9C40YHQvtC6XHJcbiAgICAgICAgY3VzdG9tT3B0aW9ucy5jbGFzc0xpc3QuYWRkKCdvcHRpb25zJyk7XHJcbiAgICAgICAgY3VzdG9tU2VsZWN0LmFwcGVuZENoaWxkKGN1c3RvbU9wdGlvbnMpO1xyXG5cclxuICAgICAgICBvcmlnaW5hbFNlbGVjdE9wdGlvbnMuZm9yRWFjaCggKGVsZW0saW5kZXgpID0+IHsgICAgICAgICAgICAgICAgICAgIC8vINCh0L7Qt9C00LDQvdC40LUg0LrQsNGB0YLQvtC80L3QvtCz0L4g0L7Qv9GI0LXQvdCwINC90LAg0L7RgdC90L7QstC1INC+0YDQuNCz0LjQvdCw0LvRjNC90L7Qs9C+XHJcbiAgICAgICAgICAgIGxldCBjdXN0b21PcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgICAgIGN1c3RvbU9wdGlvbi5jbGFzc0xpc3QuYWRkKCdvcHRpb24nKTtcclxuICAgICAgICAgICAgY3VzdG9tT3B0aW9uLmlubmVyVGV4dCA9IGVsZW0uaW5uZXJUZXh0O1xyXG4gICAgICAgICAgICBjdXN0b21PcHRpb25zLmFwcGVuZENoaWxkKGN1c3RvbU9wdGlvbik7XHJcbiAgICAgICAgICAgIGlmIChlbGVtLnNlbGVjdGVkKXtcclxuICAgICAgICAgICAgICAgIGN1c3RvbVNlbGVjdGVkLmlubmVyVGV4dCA9IGVsZW0uaW5uZXJUZXh0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vINCS0YvQsdGA0LDQvdC90YvQuSDQv9C+0LrQsNC30YvQstCw0LXQvCDQsiDRgtC10LPQtSDQoFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1c3RvbU9wdGlvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4geyAgICAgICAgICAgICAgLy8g0KHQvtCx0LjRgtC40LUg0LTQu9GPINC/0LXRgNC10LTQsNGH0Lgg0LLRi9Cx0YDQsNC90L3QvtCz0L4g0L7Qv9GI0LXQvdCwINCyINC+0YHQvdC+0LLQvdC+0Lkg0YHQtdC70LXQutGCXHJcbiAgICAgICAgICAgICAgICBjdXN0b21TZWxlY3RGaWVsZC5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKS52YWx1ZSA9IGVsZW0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICBjdXN0b21TZWxlY3RGaWVsZC5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xyXG4gICAgICAgICAgICAgICAgZWxlbS5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBjdXN0b21TZWxlY3RlZC5pbm5lclRleHQgPSBjdXN0b21PcHRpb24uaW5uZXJUZXh0O1xyXG4gICAgICAgICAgICAgICAgY3VzdG9tU2VsZWN0LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgY3VzdG9tT3B0aW9ucy5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0gKTtcclxuXHJcbiAgICAgICAgY3VzdG9tU2VsZWN0RmllbGQucHJlcGVuZChjdXN0b21TZWxlY3QpXHJcbiAgICB9IClcclxufVxyXG5cclxuLyogIHRvdmFyIGN1c3RvbSBzZWxlY3QgICAgKi9cclxuXHJcbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXNpZGUgLmZpZWxkJykpe1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFzaWRlIC5maWVsZCcpLmZvckVhY2goIGVsZW0gPT4ge1xyXG4gICAgICAgIG5ldyBfY29tcG9uZW50c19oaWRlTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW1wiZGVmYXVsdFwiXShlbGVtKVxyXG4gICAgfSlcclxufVxuXG4vKioqLyB9KVxuLyoqKioqKi8gXSk7Il0sImZpbGUiOiJtYWluLW1pbi5qcyJ9
